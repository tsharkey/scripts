#!/usr/bin/python3

import git
from simple_term_menu import TerminalMenu

from pyutils.githelpers import *
from pyutils.jirahelpers import get_user_tickets


def build_branch_name(ticket_num, desc):
    if ticket_num == "None" or ticket_num == "":
        return desc.replace(" ", "_")

    return ticket_num+"."+desc.replace(" ", "_")


tickets = get_user_tickets('tom@promoboxx.com')

ticket_opts = [
    f'{ticket.key} - {ticket.fields.summary}' for ticket in tickets
]

# Add a None option to the list to support branches without tickets
ticket_opts.append('None')

menu = TerminalMenu(ticket_opts, show_search_hint=True,
                    search_key=None, title="Select ticket to prefix branch with: ")
ticket_index = menu.show()
choice = ticket_opts[ticket_index]

ticket_num = choice.split(' ')[0].strip()

desc = input("Enter description: ")

if has_changes():
    opts = [
        "stash",
        "commit",
        "ignore",
        "cancel"
    ]

    terminal_menu = TerminalMenu(
        opts, show_search_hint=True, search_key=None, title="What would you like to do with the changes? ")
    opt_index = terminal_menu.show()
    opt = opts[opt_index]
    if opt == "stash":
        print("Stashing changes...")
        git.Git().stash()
    elif opt == "commit":
        if is_on_default():
            print(colored("WARN: You are on the default branch..." +
                          " are you sure you want to commit to this branch? (y/n) ", "yellow"))
            answer = input()
            if answer != "y":
                print("Okay...")
                sys.exit(0)

        commit_message = input("Enter commit message: ")
        print("Committing changes... with message: " + commit_message)
        git.Git().add(A=True)
        git.Git().commit(m=commit_message)
    elif opt == "ignore":
        print("Leaving changes...")
        pass
    elif opt == "cancel":
        print("Okay...")
        sys.exit(0)

# create new branch with ticket number and description
branch_name = build_branch_name(ticket_num, desc)
git.Git().checkout('-b', branch_name)
